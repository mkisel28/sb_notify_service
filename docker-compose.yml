
services:
  admin_app:
    build:
      context: .
      dockerfile: ./docker/admin/Dockerfile
      target: prod
    container_name: admin_app_sb_notify
    restart: unless-stopped
    command: bash -c "python src/manage.py collectstatic --noinput && python src/manage.py migrate && python src/manage.py runserver 0.0.0.0:8000"
    volumes:
      - media_data_sb_notify:/app/src/media  
      - static_data_sb_notify:/app/src/staticfiles 
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy


  backend_app:
    build: 
      context: .
      dockerfile: ./docker/backend/Dockerfile
      target: prod
    container_name: backend_app_sb_notify
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env

  db:
    image: postgres:17
    container_name: postgres_db_sb_notify
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 3s
      retries: 5
      timeout: 5s
      start_interval: 2s
    volumes:
      - pg_data_sb_notify:/var/lib/postgresql/data


  redis:
    image: redis:8.0-M02-alpine
    container_name: redis
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      retries: 5
      timeout: 3s
      start_period: 2s
    volumes:
      - redis_data:/data
      - ./docker/redis.conf:/usr/local/etc/redis/redis.conf

  nginx:
    image: nginx:1.25
    container_name: nginx_sb_notify
    restart: unless-stopped
    depends_on:
      - admin_app
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - static_data_sb_notify:/code/static:ro
      - media_data_sb_notify:/code/media:ro


volumes:
  pg_data_sb_notify:
  media_data_sb_notify:
  static_data_sb_notify:
  redis_data:
